# Execution begins at address 0 
       .pos    0
       
init:  irmovq stack, %rsp # set up stack pointer  
       call    main       # execute main program
       halt               # terminate program 

# Array of 4 elements
        .align 8
array:
        .quad  0x000d000d000d
        .quad  0x00c000c000c0
        .quad  0x0b000b000b00
        .quad  0xa000a000a000

# should set rax to 0x0000abcdabcdabcd
main:
        irmovq array, %rdi # array base
        irmovq $4, %rsi    # count
        call   sum         # sum(array, 4)
        ret

        # int sum(int *start, int count)
        # rdi = start; rsi = count
sum:
        irmovq $8, %r8     # const 8
        irmovq $1, %r9     # const 1
        xorq   %rax, %rax  # sum = 0
        andq   %rsi,%rsi   # == 0?
        jmp    test        # goto test
loop:
        mrmovq (%rdi),%r10 # get *Start
        addq   %r10, %rax  # add to sum
        addq   %r8, %rdi   # start++
        subq   %r9, %rsi   # count--
test:
        jne    loop        # stop when 0
        ret

#stack starts here and grows to lower addresses  
        .pos   0x200
stack:
